{"version":3,"sources":["components/Time.js","components/LocationImage.js","components/WeatherImage.js","components/DailyForecast.js","components/HourlyForecast.js","components/Titles.js","components/CurrentDate.js","components/Features.js","App.js","serviceWorker.js","index.js"],"names":["Time","props","react_default","a","createElement","className","date","time","getHours","getMinutes","getSeconds","error","LocationImage","src","aria-hidden","alt","width","WeatherImage","DailyForecast","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchDailyForecast","url","urlApiForDaily","axios","get","then","response","setState","data","dailyForecastData","weekdays","today","dt","weekDayName","Date","getDay","dailyTemp_day","Math","round","temp","day","dailyTemp_night","night","dailyMinTemp","min","dailyMaxTemp","max","dailyHumidity","humidity","dailyPressure","pressure","dailyWind","speed","dailyWeather","weather","description","dailyIcon","icon","days","daysFull","temps_day","temps_night","minTemps","maxTemps","c_humidity","c_pressure","c_wind","icons","i","state","list","length","dayFull","push","concat","toConsumableArray","slice","location","encodeURIComponent","find","e","changeLocation","preventDefault","inputLocation","locationInput","value","setIndex","index","displayIndex","_this2","dist_default","format","components_Time","components_LocationImage","onSubmit","defaultValue","type","ref","input","height","map","item","key","onClick","unix","lib_default","ticking","components_WeatherImage","Component","HourlyForecast","fetchHourlyForecast","urlApiForHourly","hourlyForecastData","dt_txt","hourlyTemp","main","hourlyMinTemp","temp_min","hourlyMaxTemp","temp_max","hourlyHumidity","hourlyPressure","hourlyWind","wind","hourlyWeather","hourlyIcon","temps","style","fontSize","Titles","currentDate","getDate","HowTo","CurrentDate","components_Titles","Daily","components_DailyForecast","Hourly","components_HourlyForecast","Instructions","Features","AppRouter","BrowserRouter","Link","to","Route","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af426cdf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Time = props => (\r\n  <div className=\"weather__info\">\r\n    {props.date && <p className=\"weather-date\">{props.date}</p>}\r\n    {props.time && (\r\n      <p className=\"weather-date\">\r\n        {props.time.getHours()}:{props.time.getMinutes()}:\r\n        {props.time.getSeconds()}\r\n      </p>\r\n    )}\r\n    {props.error && <p className=\"weather-details\">{props.error}</p>}\r\n  </div>\r\n);\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\n\r\nconst LocationImage = () => (\r\n  <div className=\"location-sign\">\r\n    <img\r\n      src=\"https://www.freeiconspng.com/uploads/location-icon-png-21.png\"\r\n      aria-hidden\r\n      alt=\"Location Image\"\r\n      width=\"11\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default LocationImage;\r\n","import React from \"react\";\r\n\r\nconst WeatherImage = () => (\r\n  <div className=\"gify3\">\r\n    <img\r\n      width=\"300px\"\r\n      src=\"http://capcityradio.net/thisisbigfootcountry/wp-content/uploads/sites/28/2016/10/inclement_weather-450.png\"\r\n      aria-hidden\r\n      alt=\"Weather Image\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default WeatherImage;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Clock from \"react-live-clock\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport Time from \"./Time\";\r\nimport LocationImage from \"./LocationImage\";\r\nimport WeatherImage from \"./WeatherImage\";\r\n\r\nclass DailyForecast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      location: \"Miami\",\r\n      date: \"\",\r\n      days: [],\r\n      daysFull: [],\r\n      temps_day: [],\r\n      temps_night: [],\r\n      minTemps: [],\r\n      maxTemps: [],\r\n      c_humidity: [],\r\n      c_pressure: [],\r\n      c_wind: [],\r\n      weather: [],\r\n      icons: [],\r\n      displayIndex: 0\r\n    };\r\n  }\r\n  fetchDailyForecast = () => {\r\n    const url = this.urlApiForDaily();\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        data: response.data\r\n      });\r\n      const dailyForecastData = this.dailyForecastData();\r\n      const weekdays = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n      ];\r\n      const today = dailyForecastData.dt;\r\n      const weekDayName =\r\n        weekdays[new Date(dailyForecastData.dt * 1000).getDay()];\r\n      const dailyTemp_day = Math.round(dailyForecastData.temp.day);\r\n      const dailyTemp_night = Math.round(dailyForecastData.temp.night);\r\n      const dailyMinTemp = Math.round(dailyForecastData.temp.min);\r\n      const dailyMaxTemp = Math.round(dailyForecastData.temp.max);\r\n      const dailyHumidity = Math.round(dailyForecastData.humidity);\r\n      const dailyPressure = Math.round(dailyForecastData.pressure);\r\n      const dailyWind = Math.round(dailyForecastData.speed);\r\n      const dailyWeather = dailyForecastData.weather[0].description;\r\n      const dailyIcon = dailyForecastData.weather[0].icon;\r\n      const days = [];\r\n      const daysFull = [];\r\n      const temps_day = [];\r\n      const temps_night = [];\r\n      const minTemps = [];\r\n      const maxTemps = [];\r\n      const c_humidity = [];\r\n      const c_pressure = [];\r\n      const c_wind = [];\r\n      const weather = [];\r\n      const icons = [];\r\n      for (let i = 0; i < this.state.data.list.length; i = i + 1) {\r\n        let dayFull =\r\n          weekdays[new Date(this.state.data.list[i].dt * 1000).getDay()];\r\n        days.push(this.state.data.list[i].dt);\r\n        daysFull.push(dayFull);\r\n        temps_day.push(Math.round(this.state.data.list[i].temp.day));\r\n        temps_night.push(Math.round(this.state.data.list[i].temp.night));\r\n        minTemps.push(Math.round(this.state.data.list[i].temp.min));\r\n        maxTemps.push(Math.round(this.state.data.list[i].temp.max));\r\n        c_humidity.push(Math.round(this.state.data.list[i].humidity));\r\n        c_pressure.push(Math.round(this.state.data.list[i].pressure));\r\n        c_wind.push(Math.round(this.state.data.list[i].speed));\r\n        weather.push(this.state.data.list[i].weather[0].description);\r\n        icons.push(this.state.data.list[i].weather[0].icon);\r\n      }\r\n      this.setState({\r\n        days: [today, ...days.slice(1)],\r\n        daysFull: [weekDayName, ...daysFull.slice(1)],\r\n        temps_day: [dailyTemp_day, ...temps_day.slice(1)],\r\n        temps_night: [dailyTemp_night, ...temps_night.slice(1)],\r\n        minTemps: [dailyMinTemp, ...minTemps.slice(1)],\r\n        maxTemps: [dailyMaxTemp, ...maxTemps.slice(1)],\r\n        c_humidity: [dailyHumidity, ...c_humidity.slice(1)],\r\n        c_pressure: [dailyPressure, ...c_pressure.slice(1)],\r\n        c_wind: [dailyWind, ...c_wind.slice(1)],\r\n        weather: [dailyWeather, ...weather.slice(1)],\r\n        icons: [dailyIcon, ...icons.slice(1)]\r\n      });\r\n    });\r\n  };\r\n  urlApiForDaily = () => {\r\n    const location = encodeURIComponent(this.state.location);\r\n    const appId = \"&APPID=fbf712a5a83d7305c3cda4ca8fe7ef29&units=metric&cnt=7\";\r\n    const weatherURL = `https://api.openweathermap.org/data/2.5/forecast/daily?q=${location}${appId}`;\r\n    return weatherURL;\r\n  };\r\n  dailyForecastData = () => {\r\n    const list = this.state.data.list;\r\n    return list.find(e => new Date(e.dt * 1000));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchDailyForecast();\r\n  }\r\n  changeLocation = e => {\r\n    e.preventDefault();\r\n    const inputLocation = this.locationInput.value;\r\n    this.setState(\r\n      {\r\n        location: inputLocation\r\n      },\r\n      () => {\r\n        this.fetchDailyForecast();\r\n      }\r\n    );\r\n  };\r\n  setIndex = index => {\r\n    this.setState({\r\n      displayIndex: index\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"location-container\">\r\n          <div>\r\n            <Moment format=\"ddd MMMM Do YYYY\">\r\n              {<Time date={this.state.date} />}\r\n            </Moment>\r\n          </div>\r\n        </div>\r\n        <div className=\"location-sign-daily\">\r\n          <LocationImage />\r\n        </div>\r\n        <form onSubmit={this.changeLocation}>\r\n          <div className=\"daily-inline-input\">\r\n            <input\r\n              className=\"location-input\"\r\n              defaultValue={this.state.location}\r\n              type=\"text\"\r\n              ref={input => (this.locationInput = input)}\r\n            />\r\n          </div>\r\n        </form>\r\n        <hr />\r\n        <div className=\"main-display\">\r\n          <div className=\"main-info\">\r\n            <div className=\"sub-info-title\">\r\n              {this.state.daysFull[this.state.displayIndex]}\r\n            </div>\r\n            <div className=\"daily-weather\">\r\n              <img\r\n                width=\"220\"\r\n                height=\"220\"\r\n                src={\r\n                  \"http://openweathermap.org/img/w/\" +\r\n                  `${this.state.icons[this.state.displayIndex]}` +\r\n                  \".png\"\r\n                }\r\n                alt=\"weather-icon\"\r\n              />\r\n            </div>\r\n            <div className=\"temp-measurement\">\r\n              {this.state.temps_day[this.state.displayIndex]}\r\n            </div>\r\n            <div className=\"temp-unit\">°C</div>\r\n          </div>\r\n          <div className=\"sub-info\">\r\n            <div className=\"sub-info-des\">\r\n              <b>Description : </b>\r\n              {this.state.weather[this.state.displayIndex]}\r\n            </div>\r\n            <div>\r\n              <b>Humidity : </b>\r\n              {this.state.c_humidity[this.state.displayIndex]}%\r\n            </div>\r\n            <div>\r\n              <b>Pressure : </b>\r\n              {this.state.c_pressure[this.state.displayIndex]} HPa\r\n            </div>\r\n            <div>\r\n              <b>Wind-Speed : </b>\r\n              {this.state.c_wind[this.state.displayIndex]} m/s\r\n            </div>\r\n            <div>\r\n              <b>Day Temp. : </b>\r\n              {this.state.temps_day[this.state.displayIndex]}\r\n              °C\r\n            </div>\r\n            <div>\r\n              <b>Night Temp. : </b>\r\n              {this.state.temps_night[this.state.displayIndex]}\r\n              °C\r\n            </div>\r\n            <div>\r\n              <span className=\"max-temp\">\r\n                <i className=\"mdi mdi-arrow-up\" />\r\n                Max.Temp. : {this.state.maxTemps[this.state.displayIndex]}\r\n                °C\r\n              </span>\r\n              <span className=\"min-temp\">\r\n                <i className=\"mdi mdi-arrow-down\" />\r\n                Min.Temp. : {this.state.minTemps[this.state.displayIndex]}\r\n                °C\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <div className=\"selection-row-daily\">\r\n            {this.state.days.map((item, index) => {\r\n              if (this.state.displayIndex === index) {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days selected card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <Moment unix format=\"dddd\">\r\n                        {item}\r\n                      </Moment>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <Moment unix format=\"dddd\">\r\n                        {item}\r\n                      </Moment>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"selection-row-daily\">\r\n            {this.state.icons.map((item, index) => {\r\n              if (this.state.displayIndex === index) {\r\n                return (\r\n                  <div\r\n                    className=\"selection-icons selected card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <img\r\n                      width=\"150\"\r\n                      height=\"150\"\r\n                      src={`http://openweathermap.org/img/w/${item}.png`}\r\n                      alt=\"weather-icon\"\r\n                    />\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"selection-icons card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <img\r\n                      width=\"150\"\r\n                      height=\"150\"\r\n                      src={`http://openweathermap.org/img/w/${item}.png`}\r\n                      alt=\"weather-icon\"\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"selection-row-daily\">\r\n            {this.state.maxTemps.map((item, index) => {\r\n              if (this.state.displayIndex === index) {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days selected card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <i className=\"mdi mdi-arrow-up\" />\r\n                      Max.Temp. {item}°C\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <i className=\"mdi mdi-arrow-up\" />\r\n                      Max.Temp. {item}°C\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          <div className=\"selection-row-daily\">\r\n            {this.state.minTemps.map((item, index) => {\r\n              if (this.state.displayIndex === index) {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days selected card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <i className=\"mdi mdi-arrow-down\" />\r\n                      Min.Temp. {item}°C\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div\r\n                    className=\"selection-days card-daily\"\r\n                    key={index + 1}\r\n                    onClick={() => this.setIndex(index)}\r\n                  >\r\n                    <div className=\"daily\">\r\n                      <i className=\"mdi mdi-arrow-down\" />\r\n                      Min.Temp. {item}°C\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"Current-Time\">\r\n          <Clock format={\"h:mm:ssa\"} ticking={true} />\r\n        </div>\r\n        <div className=\"weather-img\">\r\n          <WeatherImage />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DailyForecast;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Clock from \"react-live-clock\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport Time from \"./Time\";\r\nimport LocationImage from \"./LocationImage\";\r\n\r\nclass HourlyForecast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      location: \"Miami\",\r\n      date: \"\",\r\n      days: [],\r\n      daysFull: [],\r\n      temps: [],\r\n      minTemps: [],\r\n      maxTemps: [],\r\n      c_humidity: [],\r\n      c_pressure: [],\r\n      c_wind: [],\r\n      weather: [],\r\n      icons: [],\r\n      displayIndex: 0\r\n    };\r\n  }\r\n  fetchHourlyForecast = () => {\r\n    const url = this.urlApiForHourly();\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        data: response.data\r\n      });\r\n      const hourlyForecastData = this.hourlyForecastData();\r\n      const weekdays = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n      ];\r\n      const now = \"Current Weather\";\r\n      const weekDayName =\r\n        weekdays[new Date(hourlyForecastData.dt_txt).getDay()];\r\n      const hourlyTemp = Math.round(hourlyForecastData.main.temp);\r\n      const hourlyMinTemp = Math.round(hourlyForecastData.main.temp_min);\r\n      const hourlyMaxTemp = Math.round(hourlyForecastData.main.temp_max);\r\n      const hourlyHumidity = Math.round(hourlyForecastData.main.humidity);\r\n      const hourlyPressure = Math.round(hourlyForecastData.main.pressure);\r\n      const hourlyWind = Math.round(hourlyForecastData.wind.speed);\r\n      const hourlyWeather = hourlyForecastData.weather[0].description;\r\n      const hourlyIcon = hourlyForecastData.weather[0].icon;\r\n      const days = [];\r\n      const daysFull = [];\r\n      const temps = [];\r\n      const minTemps = [];\r\n      const maxTemps = [];\r\n      const c_humidity = [];\r\n      const c_pressure = [];\r\n      const c_wind = [];\r\n      const weather = [];\r\n      const icons = [];\r\n      for (let i = 0; i < this.state.data.list.length; i = i + 1) {\r\n        let date = new Date(this.state.data.list[i].dt_txt);\r\n        let dayFull = weekdays[date.getDay()];\r\n        days.push(this.state.data.list[i].dt_txt);\r\n        daysFull.push(dayFull);\r\n        temps.push(Math.round(this.state.data.list[i].main.temp));\r\n        minTemps.push(Math.round(this.state.data.list[i].main.temp_min));\r\n        maxTemps.push(Math.round(this.state.data.list[i].main.temp_max));\r\n        c_humidity.push(Math.round(this.state.data.list[i].main.humidity));\r\n        c_pressure.push(Math.round(this.state.data.list[i].main.pressure));\r\n        c_wind.push(Math.round(this.state.data.list[i].wind.speed));\r\n        weather.push(this.state.data.list[i].weather[0].description);\r\n        icons.push(this.state.data.list[i].weather[0].icon);\r\n      }\r\n      this.setState({\r\n        days: [now, ...days.slice(1)],\r\n        daysFull: [weekDayName, ...daysFull.slice(1)],\r\n        temps: [hourlyTemp, ...temps.slice(1)],\r\n        minTemps: [hourlyMinTemp, ...minTemps.slice(1)],\r\n        maxTemps: [hourlyMaxTemp, ...maxTemps.slice(1)],\r\n        c_humidity: [hourlyHumidity, ...c_humidity.slice(1)],\r\n        c_pressure: [hourlyPressure, ...c_pressure.slice(1)],\r\n        c_wind: [hourlyWind, ...c_wind.slice(1)],\r\n        weather: [hourlyWeather, ...weather.slice(1)],\r\n        icons: [hourlyIcon, ...icons.slice(1)]\r\n      });\r\n    });\r\n  };\r\n  urlApiForHourly = () => {\r\n    const location = encodeURIComponent(this.state.location);\r\n    const appId = \"&APPID=d94f810c218fa367514761ac7f7bc5bc&units=metric\";\r\n    const weatherURL = `https://api.openweathermap.org/data/2.5/forecast?q=${location}${appId}`;\r\n    return weatherURL;\r\n  };\r\n  hourlyForecastData = () => {\r\n    const list = this.state.data.list;\r\n    return list.find(e => new Date(e.dt_txt * 1000));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchHourlyForecast();\r\n  }\r\n  changeLocation = e => {\r\n    e.preventDefault();\r\n    const inputLocation = this.locationInput.value;\r\n    this.setState(\r\n      {\r\n        location: inputLocation\r\n      },\r\n      () => {\r\n        this.fetchHourlyForecast();\r\n      }\r\n    );\r\n  };\r\n  setIndex = index => {\r\n    this.setState({\r\n      displayIndex: index\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-content\">\r\n        <div className=\"DateTime\">\r\n          <div className=\"CurrentDate\">\r\n            <Moment format=\"ddd MMMM Do YYYY\">\r\n              {<Time date={this.state.date} />}\r\n            </Moment>\r\n          </div>\r\n          <br />\r\n          <Clock\r\n            style={{ fontSize: \"1.5em\" }}\r\n            format={\"h:mm:ssa\"}\r\n            ticking={true}\r\n          />\r\n        </div>\r\n        <div className=\"location-image-hourly\">\r\n          <LocationImage />\r\n        </div>\r\n        <form onSubmit={this.changeLocation} className=\"Hourly-Form\">\r\n          <div className=\"inline-input\">\r\n            <input\r\n              className=\"location-input\"\r\n              defaultValue={this.state.location}\r\n              type=\"text\"\r\n              ref={input => (this.locationInput = input)}\r\n            />\r\n          </div>\r\n        </form>\r\n        <hr />\r\n        <div className=\"main-display-hourly\">\r\n          <div className=\"sub-info-title-hourly\">\r\n            {this.state.daysFull[this.state.displayIndex]}\r\n          </div>\r\n          <div>\r\n            <div className=\"temp-measurement\">\r\n              {this.state.temps[this.state.displayIndex]}\r\n              <span className=\"temp-unit-hourly\">°C</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"sub-info-hourly\">\r\n            <div>\r\n              {\" \"}\r\n              <img\r\n                width=\"220\"\r\n                height=\"220\"\r\n                src={\r\n                  \"http://openweathermap.org/img/w/\" +\r\n                  `${this.state.icons[this.state.displayIndex]}` +\r\n                  \".png\"\r\n                }\r\n                alt=\"Weather Icon\"\r\n              />\r\n            </div>\r\n            <div className=\"sub-info-des\">\r\n              <b>Description : </b>\r\n              {this.state.weather[this.state.displayIndex]}\r\n            </div>\r\n            <div>\r\n              <b>Humidity : </b>\r\n              {this.state.c_humidity[this.state.displayIndex]}%\r\n            </div>\r\n            <div>\r\n              <b>Pressure : </b>\r\n              {this.state.c_pressure[this.state.displayIndex]} HPa\r\n            </div>\r\n            <div>\r\n              <b>Wind Speed : </b>\r\n              {this.state.c_wind[this.state.displayIndex]} m/s\r\n            </div>\r\n            <div>\r\n              <span className=\"max-temp\">\r\n                <i className=\"mdi mdi-arrow-up\" />\r\n                Max.Temp. ={this.state.maxTemps[this.state.displayIndex]}\r\n                °C\r\n              </span>\r\n              <span className=\"min-temp\">\r\n                <i className=\"mdi mdi-arrow-down\" />\r\n                Min.Temp. ={this.state.minTemps[this.state.displayIndex]}\r\n                °C\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div className=\"selection-panel\">\r\n          <div className=\"selection-row\">\r\n            <table>\r\n              <tbody>\r\n                {this.state.days.map((item, index) => {\r\n                  if (this.state.displayIndex === index) {\r\n                    return (\r\n                      <tr\r\n                        className=\"selectiondays selected card\"\r\n                        key={index + 1}\r\n                        onClick={() => this.setIndex(index)}\r\n                      >\r\n                        <td className=\"hourly\">{item}</td>\r\n                      </tr>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <tr\r\n                        className=\"selectiondays card\"\r\n                        key={index + 1}\r\n                        onClick={() => this.setIndex(index)}\r\n                      >\r\n                        <td className=\"hourly\">{item}</td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"gify1\">\r\n          <img\r\n            width=\"420px\"\r\n            height=\"380px\"\r\n            src={\"https://media2.giphy.com/media/10ku8RPTtIWa5i/source.gif\"}\r\n            aria-hidden\r\n            alt=\"Weather Image\"\r\n          />\r\n        </div>\r\n        <img\r\n          width=\"1100\"\r\n          height=\"540\"\r\n          src={\r\n            \"https://codemyui.com/wp-content/uploads/2017/08/cartoony-weather-animations-in-css.gif\"\r\n          }\r\n          aria-hidden\r\n          alt=\"Weather Image\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HourlyForecast;\r\n","import React from \"react\";\r\n\r\nconst Titles = () => (\r\n  <div>\r\n    <h1 className=\"title\">My Weather App</h1>\r\n  </div>\r\n);\r\n\r\nexport default Titles;\r\n","import React from \"react\";\r\n\r\nconst Date = () => {\r\n  let currentDate = new Date().getDate();\r\n  return <span>{currentDate}</span>;\r\n};\r\n\r\nexport default Date;\r\n","import React from \"react\";\r\nimport Clock from \"react-live-clock\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport Titles from \"./Titles\";\r\nimport Date from \"./CurrentDate\";\r\nimport WeatherImage from \"./WeatherImage\";\r\n\r\nconst HowTo = () => (\r\n  <div>\r\n    <div className=\"CurrentDate\">\r\n      <Moment format=\"ddd MMMM Do YYYY\">\r\n        <Date />\r\n      </Moment>\r\n    </div>\r\n    <div className=\"CurrentTime\">\r\n      <Clock style={{ fontSize: \"1.5em\" }} format={\"h:mm:ssa\"} ticking={true} />\r\n    </div>\r\n    <Titles />\r\n    <h1 className=\"How\">App Features</h1>\r\n    <div className=\"HowTo\">\r\n      <p>\r\n        1. The Weather App displays a 7-day daily weather forecast and 5-day\r\n        hourly weather forecast.\r\n      </p>\r\n      <p>\r\n        2. It has the ability to click on a day and see its weather details.\r\n      </p>\r\n      <p>\r\n        3. The hourly forecast displays for a particular day hourly weather\r\n        details.\r\n      </p>\r\n      <p>\r\n        4. The Daily forecast button shows the high and low temperatures, and an\r\n        image for sunny/rainy/cloudy/snowy for a particular day.\r\n      </p>\r\n      <p>\r\n        5. It can just maintain the current view in the top-level App state.\r\n      </p>\r\n    </div>\r\n    <WeatherImage />\r\n  </div>\r\n);\r\n\r\nexport default HowTo;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport DailyForecast from \"./components/DailyForecast\";\nimport HourlyForecast from \"./components/HourlyForecast\";\nimport HowTo from \"./components/Features\";\nimport Titles from \"./components/Titles\";\nimport \"./App.css\";\n\nfunction Daily() {\n  return (\n    <div className=\"hourlytitle\">\n      <Titles />\n      <DailyForecast />\n    </div>\n  );\n}\n\nfunction Hourly() {\n  return (\n    <div className=\"hourlytitle\">\n      <Titles />\n      <HourlyForecast />\n    </div>\n  );\n}\n\nfunction Instructions() {\n  return (\n    <h2>\n      <HowTo />\n    </h2>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul className=\"ul\">\n            <li>\n              <Link to=\"/\">Daily Forecast</Link>\n            </li>\n            <li>\n              <Link to=\"/HourlyForecast/\">Hourly Forecast</Link>\n            </li>\n            <li>\n              <Link to=\"/Features/\">Features</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Route path=\"/\" exact component={Daily} />\n        <Route path=\"/HourlyForecast/\" component={Hourly} />\n        <Route path=\"/Features/\" component={Instructions} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}